{"ast":null,"code":"var _jsxFileName = \"/home/kolomiets/Desktop/Universities/React_app/Capstone_project/capstone_project_meta/src/components/RadioOption.js\";\nimport * as React from \"react\";\nimport \"../css/radioGroup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RadioGroup = ({\n  onChange,\n  selected,\n  children\n}) => {\n  // Use React.Children.map and React.cloneElement to clone the children\n  // and pass the correct props to each RadioOption\n\n  function cloneChildren(child) {\n    console.log(\"I am in the cloneElement func!\");\n    return /*#__PURE__*/React.cloneElement(child, {\n      onChange,\n      checked: child.props.value === selected ? true : false\n    });\n  }\n\n  //const RadioOptions = React.Children.map(children, (child) => {\n  //  return React.cloneElement(child, { onChange })\n  //})\n\n  const RadioOptions = React.Children.map(children, cloneChildren);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RadioGroup\",\n    children: RadioOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_c = RadioGroup;\nexport const RadioOption = ({\n  value,\n  checked,\n  onChange,\n  children\n}) => {\n  // Hook up the onChange handler to call the onChange prop passed to RadioGroup\n  // Also, make sure to pass the correct checked prop to the input element\n  function handleOnChange(e) {\n    console.log(e.target.value);\n    return onChange(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RadioOption\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: value,\n      type: \"radio\",\n      name: value,\n      value: value,\n      onChange: handleOnChange,\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c2 = RadioOption;\nvar _c, _c2;\n$RefreshReg$(_c, \"RadioGroup\");\n$RefreshReg$(_c2, \"RadioOption\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RadioGroup","onChange","selected","children","cloneChildren","child","console","log","cloneElement","checked","props","value","RadioOptions","Children","map","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","RadioOption","handleOnChange","e","target","id","type","name","htmlFor","_c2","$RefreshReg$"],"sources":["/home/kolomiets/Desktop/Universities/React_app/Capstone_project/capstone_project_meta/src/components/RadioOption.js"],"sourcesContent":["import * as React from \"react\";\nimport \"../css/radioGroup.css\";\n\nexport const RadioGroup = ({ onChange, selected, children }) => {\n  // Use React.Children.map and React.cloneElement to clone the children\n  // and pass the correct props to each RadioOption\n\n  function cloneChildren(child) {\n    console.log(\"I am in the cloneElement func!\");\n    return React.cloneElement(child, {\n      onChange,\n      checked: child.props.value === selected ? true : false,\n    });\n  }\n\n  //const RadioOptions = React.Children.map(children, (child) => {\n  //  return React.cloneElement(child, { onChange })\n  //})\n\n  const RadioOptions = React.Children.map(children, cloneChildren);\n\n  return <div className=\"RadioGroup\">{RadioOptions}</div>;\n};\n\nexport const RadioOption = ({ value, checked, onChange, children }) => {\n  // Hook up the onChange handler to call the onChange prop passed to RadioGroup\n  // Also, make sure to pass the correct checked prop to the input element\n  function handleOnChange(e) {\n    console.log(e.target.value);\n    return onChange(e.target.value);\n  }\n\n  return (\n    <div className=\"RadioOption\">\n      <input\n        id={value}\n        type=\"radio\"\n        name={value}\n        value={value}\n        onChange={handleOnChange}\n        checked={checked}\n      />\n      <label htmlFor={value}>{children}</label>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAC9D;EACA;;EAEA,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,oBAAOV,KAAK,CAACW,YAAY,CAACH,KAAK,EAAE;MAC/BJ,QAAQ;MACRQ,OAAO,EAAEJ,KAAK,CAACK,KAAK,CAACC,KAAK,KAAKT,QAAQ,GAAG,IAAI,GAAG;IACnD,CAAC,CAAC;EACJ;;EAEA;EACA;EACA;;EAEA,MAAMU,YAAY,GAAGf,KAAK,CAACgB,QAAQ,CAACC,GAAG,CAACX,QAAQ,EAAEC,aAAa,CAAC;EAEhE,oBAAOL,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAZ,QAAA,EAAES;EAAY;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzD,CAAC;AAACC,EAAA,GAnBWpB,UAAU;AAqBvB,OAAO,MAAMqB,WAAW,GAAGA,CAAC;EAAEV,KAAK;EAAEF,OAAO;EAAER,QAAQ;EAAEE;AAAS,CAAC,KAAK;EACrE;EACA;EACA,SAASmB,cAAcA,CAACC,CAAC,EAAE;IACzBjB,OAAO,CAACC,GAAG,CAACgB,CAAC,CAACC,MAAM,CAACb,KAAK,CAAC;IAC3B,OAAOV,QAAQ,CAACsB,CAAC,CAACC,MAAM,CAACb,KAAK,CAAC;EACjC;EAEA,oBACEZ,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAZ,QAAA,gBAC1BJ,OAAA;MACE0B,EAAE,EAAEd,KAAM;MACVe,IAAI,EAAC,OAAO;MACZC,IAAI,EAAEhB,KAAM;MACZA,KAAK,EAAEA,KAAM;MACbV,QAAQ,EAAEqB,cAAe;MACzBb,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFpB,OAAA;MAAO6B,OAAO,EAAEjB,KAAM;MAAAR,QAAA,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACU,GAAA,GArBWR,WAAW;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}